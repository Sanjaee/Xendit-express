// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
}

model Order {
  id            String         @id @default(uuid())
  productId     String
  product       Product        @relation(fields: [productId], references: [id])
  quantity      Int            @default(1)
  totalAmount   Float
  status        OrderStatus    @default(PENDING)
  payment       Payment?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Payment {
  id            String         @id @default(uuid())
  orderId       String         @unique
  order         Order          @relation(fields: [orderId], references: [id])
  externalId    String?        @unique
  amount        Float
  method        PaymentMethod
  status        PaymentStatus  @default(PENDING)
  paymentUrl    String?
  metadata      Json?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
}

enum PaymentMethod {
  BANK_TRANSFER
  CREDIT_CARD
  E_WALLET
}

enum PaymentStatus {
  PENDING
  PAID
  EXPIRED
  FAILED
}